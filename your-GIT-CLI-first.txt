Here is a group of common Git commands organized by their typical use cases.
Basic Git Commands
    Initialize a new Git repository:
    git init

    Clone an existing repository:
    git clone <repository-url>

    Check the status of the repository:
    git status

    Add files to the staging area:
    git add <file>

    Or to add all files:
    git add .

    Commit changes:
    git commit -m "Commit message"

    View commit history:
    git log

Branching and Merging
    Create a new branch:
    git branch <branch-name>

    Switch to a branch:
    git checkout <branch-name>

    Create and switch to a new branch:
    git checkout -b <branch-name>

    Merge a branch into the current branch:
    git merge <branch-name>

    Delete a branch:
    git branch -d <branch-name>

Remote Repositories
    Add a remote repository:
    git remote add <name> <url>

    View remote repositories:
    git remote -v

    Fetch changes from a remote repository:
    git fetch <remote-name>

    Pull changes from a remote repository and merge:
    git pull <remote-name> <branch-name>

    Push changes to a remote repository:
    git push <remote-name> <branch-name>

Stashing and Cleaning
    Stash changes:
    git stash

    List stashes:
    git stash list

    Apply a stash:
    git stash apply

    Apply and drop a stash:
    git stash pop 

    Delete a specific stash:
    git stash drop <stash@{n}>

    Clean untracked files:
    git clean -f

Undoing Changes
    Undo changes in the working directory:
    git checkout -- <file>

    Reset the staging area and working directory to the last commit:
    git reset --hard

    Revert a commit by creating a new commit:
    git revert <commit>

    Reset the current branch to a specific commit:
    git reset --hard <commit>

Viewing Differences
    Show changes between the working directory and the staging area:
    git diff

    Show changes between the staging area and the latest commit:
    git diff --staged

    Show changes between two commits:
    git diff <commit1> <commit2>

Tagging
    Create a new tag:
    git tag <tag-name>

    Push tags to a remote repository:
    git push <remote-name> --tags

    List tags:
    git tag

Git Configuration
    Set the user name:
    git config --global user.name "Your Name"

    Set the user email:
    git config --global user.email "your.email@example.com"

    View Git configuration:
    git config --list

Reseting Remote OR Local Information
    Updates your local repository with the latest changes from the remote repository
    git fetch origin          # Fetch the latest changes from remote
    
    Resets your current branch to match the state of the specified branch
    git reset --hard origin/<branch-name> # resets both index and pwd to match specified branch

Change Remote URL
    git remote set-url <remote-name> <new-url>
    git remote set-url origin https://github.com/username/repository.git

    Scenario 1: Changing from HTTPS to SSH
    git remote set-url origin git@github.com:username/repository.git

    Scenario 2: Changing from SSH to HTTPS
    git remote set-url origin https://github.com/username/repository.git

    Verification
    git remote -v

Add Remote Name
    git remote add <remote-name> <remote-url>
    git remote add origin https://github.com/username/repository.git
Remove Remote Name
    git remote remove <remote-name>










Reseting Remote Credentials
